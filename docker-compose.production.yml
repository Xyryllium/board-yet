version: "3.8"

services:
    app:
        image: board-yet:latest
        build:
            context: .
            target: php
            args:
                - APP_ENV=production
        container_name: board_yet_app
        environment:
            - APP_ENV=production
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./storage:/var/www/storage
        depends_on:
            database:
                condition: service_healthy
        restart: unless-stopped
        networks:
            - app-network

    database:
        image: postgres:14.18-bookworm
        container_name: board_yet_db
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./backups:/backups
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
            interval: 10s
            timeout: 5s
            retries: 5
        restart: unless-stopped
        networks:
            - app-network
        # Budget-friendly: No external port exposure for security
        # ports:
        #     - "5432:5432"


    nginx:
        image: nginx:stable-alpine
        container_name: board_yet_nginx
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf
            - ./ssl:/etc/nginx/ssl:ro
        depends_on:
            - app
        restart: unless-stopped
        networks:
            - app-network

    # Optional: Queue worker for background jobs
    queue:
        image: board-yet:latest
        container_name: board_yet_queue
        command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
        environment:
            - APP_ENV=production
        working_dir: /var/www
        volumes:
            - ./:/var/www
        depends_on:
            - database
        restart: unless-stopped
        networks:
            - app-network

volumes:
    postgres_data:

networks:
    app-network:
        driver: bridge
