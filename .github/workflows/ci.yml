name: Board Yet CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.set-tag.outputs.tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Set Image Tag
        id: set-tag
        run: echo "tag=board-yet:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: |
          docker compose build
          docker tag app board-yet:${{ github.sha }}
          docker save board-yet:${{ github.sha }} | gzip > image.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-image
          path: image.tar.gz

  phpstan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Built Image
        uses: actions/download-artifact@v4
        with:
          name: app-image

      - name: Load Docker Image
        run: gunzip -c image.tar.gz | docker load

      - name: Run PHPStan
        run: docker run --rm board-yet:${{ github.sha }} phpstan analyse app

  phpcs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Built Image
        uses: actions/download-artifact@v4
        with:
          name: app-image

      - name: Load Docker Image
        run: gunzip -c image.tar.gz | docker load

      - name: Run PHPCS
        run: docker run --rm board-yet:${{ github.sha }} phpcs --standard=/var/www/phpcs.xml app

  phpmd:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Built Image
        uses: actions/download-artifact@v4
        with:
          name: app-image

      - name: Load Docker Image
        run: gunzip -c image.tar.gz | docker load

      - name: Run PHPMD
        run: docker run --rm board-yet:${{ github.sha }} phpmd app text phpmd.xml

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Built Image
        uses: actions/download-artifact@v4
        with:
          name: app-image

      - name: Load Docker Image
        run: gunzip -c image.tar.gz | docker load

      - name: Copy .env.testing
        run: cp .env.testing .env

      - name: Start PostgreSQL
        run: |
          docker run -d \
            --name pg \
            -e POSTGRES_DB=boardyet_test \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres \
            -p 5432:5432 \
            postgres:15

      - name: Wait for DB
        run: |
          echo "Waiting for DB..."
          for i in {1..10}; do
            docker exec pg pg_isready && break
            sleep 3
          done

      - name: Run Laravel Setup
        run: |
          docker run --rm \
            --network host \
            -v ${{ github.workspace }}:/var/www \
            -w /var/www \
            board-yet:${{ github.sha }} \
            sh -c "
              cp .env.testing .env && \
              composer install --no-interaction --prefer-dist --no-progress && \
              php artisan key:generate && \
              php artisan migrate --force
            "

      - name: Run Tests
        run: |
          docker run --rm \
            --network host \
            -v ${{ github.workspace }}:/var/www \
            -w /var/www \
            board-yet:${{ github.sha }} \
            php artisan test

      - name: Shutdown
        if: always()
        run: docker rm -f pg || true